package main

import (
	"context"
	"fmt"
	"log"

	"github.com/segmentio/kafka-go"
)

func main() {
	// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
	brokers := []string{"localhost:9092"}
	topic := "my-first-topic"
	groupID := "my-consumer-group"

	// –°–æ–∑–¥–∞—ë–º Reader (—á–∏—Ç–∞—Ç–µ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–π) —Å Consumer Group
	r := kafka.NewReader(kafka.ReaderConfig{
		Brokers:        brokers,
		Topic:          topic,
		GroupID:        groupID,
		StartOffset:    kafka.FirstOffset, // –ß–∏—Ç–∞–µ–º —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞
		CommitInterval: 1,                 // –ö–æ–º–º–∏—Ç–∏–º —Å–º–µ—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
	})

	defer r.Close()

	fmt.Printf("üéß –°–ª—É—à–∞—é —Ç–æ–ø–∏–∫ '%s' –≤ –≥—Ä—É–ø–ø–µ '%s'...\n\n", topic, groupID)

	ctx := context.Background()

	// –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ —á–∏—Ç–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
	for {
		msg, err := r.ReadMessage(ctx)
		if err != nil {
			log.Fatalf("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
		}

		fmt.Printf("üì® –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n")
		fmt.Printf("   Offset:    %d\n", msg.Offset)
		fmt.Printf("   Partition: %d\n", msg.Partition)
		fmt.Printf("   Key:       %s\n", string(msg.Key))
		fmt.Printf("   Value:     %s\n", string(msg.Value))
		fmt.Printf("   Time:      %s\n\n", msg.Time.Format("15:04:05"))
	}
}
